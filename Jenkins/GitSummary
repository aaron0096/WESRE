Git is a source code control system
What it allows is for programmers to work on code collaboratively. 
And, it provides a changelog for whom did what edits to what files.
There's also ability to rollback in the event something is broken.


Git allows for 'branching'.
The 'main' branch refers to where all the code and files stay. Also the current files.
Creating a branch means copying all the files into a seperate area. You can then work on these files in the branch without modifying the main branch.
Some benefits include that it won't affect the current working copy of the file if there's uncompleted code.
Once the code is done, then you can merge it onto the main branch, not partially-edited code that can spoil things.

Branching also allows you to pause the current project, and you can move on to working on some other project or hotfixes that crop up.
You also can have multiple branches at the same time, with each branch working on a different project or area.


How the files are worked with:
Any changes in the files that you want to upload to git must be tracked first.
Command is to   << git add 'filename' >>  or  << git add . >>   for all files.
This moves the files to the staging area.
Next step is to commit the files to github.
Command is    << git commit -m 'message' >>  or  << git commit >>  and enter vim to do a message
    Empty commit message gets failed commit
If commit is successful, your local files are added to the Remote Repository, and changes to files are merged.

If unsuccessful, could be due to file conflict. Remote Repository has changes no in the local repo.
    Therefore needs to    << git pull >>   downloads and merges remote files with the local files, or
                          << git fetch >>   to download new files from remote repo of changes. Does not merge. Fetch is safer because pull may undo your work.


https://i.stack.imgur.com/XwVzT.png
Helpful image for git pull, fetch, commit, etc.


--- Team exercise ---
### giving permissions to collaborators
Go to github, settings, collaborators and then add username, full name, or email.
Collaborators can push or pull, unless some other settings are set to restrict pushing on the main branch for 'safety' reasons

git clone 'URL' 
### clones the URL of the github onto local , allows you to work on the files on your computer itself.

git branch <new branch name>
### creates a new branch, if there's a same name, returns error
git -d <branch name>
### deletes the LOCAL copy of the branch, not the remote
git push origin --delete <branch name>
### deletes the REMOTE copy of the branch, not the local
** need to do both local and remote deletion to remove the branch totally

git checkout <branch name>
### enters the branch for editing.
git merge <branch name>
### merges the named branch with the current branch that you're in

### committing changes to main at the same time
### if someone else has already committed their changes, your commit will fail
### git requires that you do a    << git pull >>    before you can do a   << git push >>

